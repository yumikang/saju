{
  "tasks": [
    {
      "id": "2906257a-415f-46ac-bf64-23a5408b6cf4",
      "name": "데이터베이스 스키마 확장 - Payment, ServiceOrder 모델",
      "description": "Prisma 스키마에 Payment와 ServiceOrder 모델을 추가하고 필요한 Enum 타입들을 정의",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:09:00.187Z",
      "relatedFiles": [
        {
          "path": "prisma/schema.prisma",
          "type": "TO_MODIFY",
          "description": "스키마 파일"
        }
      ],
      "implementationGuide": "1. prisma/schema.prisma 파일 수정\n2. PaymentMethod enum: CARD, BANK_TRANSFER, KAKAO_PAY, NAVER_PAY, TOSS\n3. PaymentStatus enum: PENDING, COMPLETED, FAILED, REFUNDED, CANCELLED\n4. ServiceType enum: NAMING, RENAMING, SAJU_COMPATIBILITY\n5. OrderStatus enum: PENDING, PAID, IN_PROGRESS, COMPLETED, CANCELLED\n6. Payment 모델: id, userId, serviceOrderId, amount, method, status, transactionId, paidAt, refundedAt, metadata\n7. ServiceOrder 모델: id, userId, serviceType, status, price, resultData, completedAt\n8. 관계 설정: User 1:N Payment, User 1:N ServiceOrder, ServiceOrder 1:1 Payment",
      "verificationCriteria": "npx prisma validate 성공, 모든 필드와 관계가 올바르게 정의됨",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함",
      "summary": "Prisma 스키마에 Payment와 ServiceOrder 모델 및 관련 Enum 타입들을 성공적으로 추가. 모든 필드, 관계, 인덱스가 올바르게 정의되었으며 npx prisma validate 검증 통과",
      "completedAt": "2025-08-27T06:09:00.186Z"
    },
    {
      "id": "3e56675a-6c75-4e6e-80f2-7ab64ae74957",
      "name": "데이터베이스 스키마 2차 보강 및 마이그레이션",
      "description": "실운영 안정성을 위한 스키마 보강: 유니크 제약, 머니 정확도, 이벤트 로그, 인덱스 최적화",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "2906257a-415f-46ac-bf64-23a5408b6cf4"
        }
      ],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:19:59.275Z",
      "relatedFiles": [
        {
          "path": "prisma/migrations",
          "type": "CREATE",
          "description": "마이그레이션 파일"
        }
      ],
      "implementationGuide": "1. Payment 모델 보강:\n   - provider 필드 추가\n   - currency enum 추가 (KRW 기본)\n   - transactionId와 provider 조합 유니크 제약\n   - 복합 인덱스 최적화 (userId + createdAt DESC)\n   \n2. PaymentEvent 모델 추가:\n   - 감사/웹훅 이벤트 추적\n   - append-only 로그\n   - type, rawPayload, signatureValid 필드\n   \n3. ServiceOrder 보강:\n   - paymentId 필드 추가 (nullable, unique)\n   - 양방향 1:1 관계 명확화\n   \n4. 인덱스 최적화:\n   - 조회 패턴별 복합 인덱스\n   - 날짜 기준 DESC 정렬\n\n5. npx prisma migrate dev --name enhance_payment_system",
      "verificationCriteria": "마이그레이션 성공, 유니크 제약 작동, 복합 인덱스 생성 확인",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    },
    {
      "id": "3cb9b143-c4dc-42f3-8443-c490b9f5adbd",
      "name": "AccountNav 공통 네비게이션 컴포넌트 생성",
      "description": "마이페이지 하위 페이지들을 위한 탭 네비게이션 컴포넌트",
      "status": "pending",
      "dependencies": [],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:06:58.936Z",
      "relatedFiles": [
        {
          "path": "app/components/account/AccountNav.tsx",
          "type": "CREATE",
          "description": "네비게이션 컴포넌트"
        }
      ],
      "implementationGuide": "1. app/components/account/AccountNav.tsx 생성\n2. Tabs 컴포넌트 사용 (shadcn/ui)\n3. 탭 메뉴: 프로필 | 결제 내역 | 서비스 이용 | 작명 이력 | 즐겨찾기\n4. 현재 경로에 따라 active 상태 표시\n5. Link 컴포넌트로 라우팅 처리",
      "verificationCriteria": "컴포넌트 렌더링 성공, 탭 클릭시 올바른 페이지로 이동",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    },
    {
      "id": "21134d85-b1c1-4dbe-933a-a8e1cc4681af",
      "name": "결제 내역 페이지 구현",
      "description": "/account/payments 라우트 생성 및 결제 내역 조회 기능",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "3e56675a-6c75-4e6e-80f2-7ab64ae74957"
        },
        {
          "taskId": "3cb9b143-c4dc-42f3-8443-c490b9f5adbd"
        }
      ],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:06:58.936Z",
      "relatedFiles": [
        {
          "path": "app/routes/account.payments.tsx",
          "type": "CREATE",
          "description": "결제 내역 페이지"
        }
      ],
      "implementationGuide": "1. app/routes/account.payments.tsx 생성\n2. loader: requireUser로 인증 확인 후 Payment 목록 조회\n3. 페이지네이션: page 파라미터 처리 (20개씩)\n4. 필터: 기간(dateFrom, dateTo), 상태(status), 결제수단(method)\n5. UI: Table 컴포넌트로 목록 표시\n6. 컬럼: 날짜, 서비스명, 결제수단, 금액, 상태\n7. PaymentStatusBadge 컴포넌트로 상태 표시\n8. 빈 상태: '결제 내역이 없습니다' 메시지",
      "verificationCriteria": "페이지 로드 성공, 결제 내역 표시, 필터링 작동",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    },
    {
      "id": "84765841-c899-4aeb-855e-f4e16d7bdc93",
      "name": "서비스 이용 내역 페이지 구현",
      "description": "/account/orders 라우트 생성 및 서비스 주문 내역 조회",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "3e56675a-6c75-4e6e-80f2-7ab64ae74957"
        },
        {
          "taskId": "3cb9b143-c4dc-42f3-8443-c490b9f5adbd"
        }
      ],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:06:58.936Z",
      "relatedFiles": [
        {
          "path": "app/routes/account.orders.tsx",
          "type": "CREATE",
          "description": "서비스 이용 내역 페이지"
        }
      ],
      "implementationGuide": "1. app/routes/account.orders.tsx 생성\n2. loader: ServiceOrder 목록 조회 (userId 기준)\n3. 페이지네이션 구현 (20개씩)\n4. 필터: 서비스타입(serviceType), 상태(status), 기간\n5. UI: Card 컴포넌트로 각 주문 표시\n6. 카드 내용: 주문일, 서비스타입, 가격, 상태, 결과보기 버튼\n7. OrderStatusBadge로 상태 표시\n8. 결과보기: /account/orders/{id}로 링크",
      "verificationCriteria": "페이지 로드 성공, 주문 목록 표시, 필터 작동",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    },
    {
      "id": "6b40833e-511c-4e10-be8c-53d1ab979e33",
      "name": "서비스 결과 상세 페이지 구현",
      "description": "/account/orders/$id 라우트로 개별 서비스 결과 조회",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "84765841-c899-4aeb-855e-f4e16d7bdc93"
        }
      ],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:06:58.936Z",
      "relatedFiles": [
        {
          "path": "app/routes/account.orders.$id.tsx",
          "type": "CREATE",
          "description": "서비스 결과 상세 페이지"
        }
      ],
      "implementationGuide": "1. app/routes/account.orders.$id.tsx 생성\n2. loader: params.id로 ServiceOrder 조회\n3. 본인 주문인지 확인 (userId 체크)\n4. serviceType별 결과 표시:\n   - NAMING: 추천 이름 목록, 사주 분석\n   - RENAMING: 개명 추천, 변경 효과\n   - SAJU_COMPATIBILITY: 궁합 점수, 분석\n5. resultData JSON 파싱하여 표시\n6. 다운로드, 인쇄 버튼 추가",
      "verificationCriteria": "상세 페이지 로드, 결과 데이터 올바른 표시",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    },
    {
      "id": "b19cb130-1f29-412b-ad18-77aa277399aa",
      "name": "메인 마이페이지 수정",
      "description": "/account 페이지에 AccountNav 추가 및 대시보드 형태로 개선",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "3cb9b143-c4dc-42f3-8443-c490b9f5adbd"
        }
      ],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:06:58.936Z",
      "relatedFiles": [
        {
          "path": "app/routes/account._index.tsx",
          "type": "TO_MODIFY",
          "description": "메인 마이페이지"
        }
      ],
      "implementationGuide": "1. app/routes/account._index.tsx 수정\n2. AccountNav 컴포넌트 import 및 추가\n3. 최근 결제 내역 요약 (최근 5건)\n4. 진행중인 서비스 주문 표시\n5. 빠른 링크: 결제 내역, 서비스 이용 내역",
      "verificationCriteria": "네비게이션 표시, 요약 정보 정확함",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    },
    {
      "id": "c265e39e-b163-4c6c-8b1b-4447473e4d15",
      "name": "테스트 데이터 생성 스크립트",
      "description": "개발/테스트용 결제 및 주문 샘플 데이터 생성",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "3e56675a-6c75-4e6e-80f2-7ab64ae74957"
        }
      ],
      "createdAt": "2025-08-27T06:06:58.936Z",
      "updatedAt": "2025-08-27T06:06:58.936Z",
      "relatedFiles": [
        {
          "path": "scripts/create-test-payments.ts",
          "type": "CREATE",
          "description": "테스트 데이터 스크립트"
        }
      ],
      "implementationGuide": "1. scripts/create-test-payments.ts 생성\n2. 테스트 사용자의 다양한 상태의 결제 생성\n3. 각 결제에 대응하는 ServiceOrder 생성\n4. 완료된 주문은 resultData 포함\n5. 다양한 날짜, 금액, 상태 조합",
      "verificationCriteria": "스크립트 실행 성공, 테스트 데이터 생성 확인",
      "analysisResult": "마이페이지에 결제 내역과 서비스 이용 내역 기능을 추가. Payment와 ServiceOrder 테이블 생성, 조회 페이지 구현, 결과 다시보기 기능 포함"
    }
  ]
}